#include<semaphore.h>
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<pthread.h> 
sem_t a,b;
pthread_t tid;
pthread_t writerthreads[100],readerthreads[100]; 
int readercount = 0;

void reader(void param)
{
   sem_wait(&a);
   readercount++;  
   if(readercount==1)
       sem_wait(&b);
   sem_post(&a);
   printf("%d reader is inside the critical section\n",readercount);
   usleep(3);
   sem_wait(&a);
   readercount--;
   if(readercount==0)
   {
       sem_post(&b);
   }
   sem_post(&a);
   printf("%d Reader is leaving the section\n",readercount+1);
   return NULL;
}
#include<semaphore.h>
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<pthread.h> 
sem_t a,b;
pthread_t tid;
pthread_t writerthreads[100],readerthreads[100]; 
int readercount = 0;

void reader(void param)
{
   sem_wait(&a);
   readercount++;  
   if(readercount==1)
       sem_wait(&b);
   sem_post(&a);
   printf("%d reader is inside the critical section\n",readercount);
   usleep(3);
   sem_wait(&a);
   readercount--;
   if(readercount==0)
   {
       sem_post(&b);
   }
   sem_post(&a);
   printf("%d Reader is leaving the section\n",readercount+1);
   return NULL;
}
       pthread_join(writerthreads[i],NULL);
       pthread_join(readerthreads[i],NULL);
   }

}
